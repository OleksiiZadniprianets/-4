# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ET-oeS23JlxPcCVsBAezZfeNFEzBl_9y
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split

# Варіант 6: синусоїда з шумом
points = 100
x_vals = np.linspace(-3, 3, points).reshape(-1, 1)
noise = np.random.uniform(-0.6, 0.6, points).reshape(-1, 1)
y_vals = 2 * np.sin(x_vals) + noise

# Поділ на тренувальні і тестові дані
x_train, x_test, y_train, y_test = train_test_split(x_vals, y_vals, test_size=0.2, random_state=1)

# Поліноміальні ознаки (ступінь 5)
poly_builder = PolynomialFeatures(degree=5, include_bias=False)
x_train_poly = poly_builder.fit_transform(x_train)
x_test_poly = poly_builder.transform(x_test)

# Ініціалізація списків для помилок
errors_lin_train = []
errors_lin_test = []
errors_poly_train = []
errors_poly_test = []

# Розміри навчальних вибірок
sizes = np.linspace(10, len(x_train), 20, dtype=int)

# Навчання моделей на різних об’ємах
for n in sizes:
    # Лінійна регресія
    lin_model = LinearRegression()
    lin_model.fit(x_train[:n], y_train[:n])
    y_pred_train_lin = lin_model.predict(x_train[:n])
    y_pred_test_lin = lin_model.predict(x_test)
    errors_lin_train.append(mean_squared_error(y_train[:n], y_pred_train_lin))
    errors_lin_test.append(mean_squared_error(y_test, y_pred_test_lin))

    # Поліноміальна регресія
    poly_model = LinearRegression()
    poly_model.fit(x_train_poly[:n], y_train[:n])
    y_pred_train_poly = poly_model.predict(x_train_poly[:n])
    y_pred_test_poly = poly_model.predict(x_test_poly)
    errors_poly_train.append(mean_squared_error(y_train[:n], y_pred_train_poly))
    errors_poly_test.append(mean_squared_error(y_test, y_pred_test_poly))

# Візуалізація кривих навчання
plt.figure(figsize=(12, 5))

# Лінійна модель
plt.subplot(1, 2, 1)
plt.plot(sizes, errors_lin_train, 'or-', label='Train MSE')
plt.plot(sizes, errors_lin_test, 'ob-', label='Test MSE')
plt.title('Криві навчання: лінійна регресія')
plt.xlabel('Кількість тренувальних зразків')
plt.ylabel('MSE')
plt.legend()
plt.grid(True)

# Поліноміальна модель
plt.subplot(1, 2, 2)
plt.plot(sizes, errors_poly_train, 'or-', label='Train MSE')
plt.plot(sizes, errors_poly_test, 'ob-', label='Test MSE')
plt.title('Криві навчання: поліном ступеня 5')
plt.xlabel('Кількість тренувальних зразків')
plt.ylabel('MSE')
plt.legend()
plt.grid(True)

plt.tight_layout()
plt.show()